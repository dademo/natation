# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
    form_login_authenticator:
        class: NatationAuthBundle\Security\FormLoginAuthenticator
        arguments: ["@router", "@security.password_encoder"]

#    app.translatorFix:
#        class: NatationBundle\Services\translatorFix
#        arguments: ['@translator']

    app.translatorFixer:
        class: NatationBundle\EventSubscriber\TranslationFixer
        tags:
            - { name: kernel.event_listener, event: kernel.request }
            - { name: kernel.event_listener, event: console.command }
        #arguments: ['@translator']
        arguments: ['@kernel']
    
    app.compet_role_extension:
        class: NatationBundle\Twig\CompetRoleExtension
        arguments: ['@doctrine.orm.entity_manager', '@service_container']
        tags:
            - { name: twig.extension }


    app.exception_controller:
        class: NatationBundle\Controller\ExceptionController
        arguments: ['@twig', '%kernel.debug%']
        tags: ['controller.service_arguments']