{% extends '@Natation/base.html.twig' %}

{% block app_body_title %}
    Mise &agrave; jour des juges pour la comp&eacute;tition {{ competition.titre }}
{% endblock %}

{% block app_body %}
    {% if alerts|length > 0 %}
        <div class="alert alert-warning" role="alert">
            {% for alert in alerts %}
                <span class="glyphicon glyphicon-warning-sign" aria-hidden="true"></span> {{ alert }} <br/>
            {% endfor %}
        </div>
    {% endif %}
    <label id="nJuge"></label><br/>
    <label id="nJugeArbitre"></label>

    {# FORM #}
    <form name="form" id="form" method="post">

    <input type="submit" class="btn btn-primary" name="bSubmit" value="Valider" style="margin-bottom: 15px;"/>

    <input type="hidden" name="all_arbitres" id='all_arbitres'/>

    <table id="all_juges" class="table table-hover">
        <thead>
            <tr>
                <th>Juge</th>
                <th>Juge-arbitre</th>
                <th>Rang</th>
                <th>Nom</th>
                <th>Pr&eacute;nom</th>
            </tr>
        </thead>
        <tbody>
            {% for juge in allJuges %}
            <tr data-jugeId="{{ juge.id }}">
                <td>
                    <input class="form-control juge" type="checkbox" value="{{ allTypeJuge['Juge'] }}"
                    {% if allCompetJuge[juge.id] is defined %} checked {% endif %} />
                </td>
                <td>
                    <input class="form-control typeJuge" type="checkbox" value="{{ allTypeJuge['Juge-arbitre'] }}"
                    {% if allCompetJugeArbitres[juge.id] is defined %} checked {% endif %} />
                    </td>
                <td><input class="form-control rang" type="number"
                    {% if allCompetJuge[juge.id] is defined %}
                        value="{{ allCompetJuge[juge.id] }}" enabled
                    {% else %}
                        disabled
                    {% endif %} min="0" max="5"/></td>
                <td>{{ juge.idPersonne.nom }}</td>
                <td>{{ juge.idPersonne.prenom }}</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>

    </form>
{% endblock %}

{% block userjs %}
    {{ parent() }}

    <!-- Création d'une datatable -->
    <script>
    $(document).ready( function () {
        // Datatable
        $('#all_juges').DataTable({
            language: {
                url: '{{ asset("datatable_langs/fr.lang.json") }}'
                //"url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/German.json"
            }
        });

        var $allJugesObj = [];

        var nJugeCheck = 0;
        var nJugeArbCheck = 0;

        // Init function
        function _tableRow_get(element) {
            var $_var = {
                // vars
                jugeCbx: $(element).find(':nth-child(1)>input'),
                jugeArbCbx: $(element).find(':nth-child(2)>input'),
                rangJugeInput: $(element).find(':nth-child(3)>input'),
                jugeId: $(element).data('jugeid'),
                // functions
                getJugeCbx: function() { return $(this.jugeCbx).prop('checked'); },
                getJugeArbCbx: function() { return $(this.jugeArbCbx).prop('checked'); },
                getJugeRang: function() { return (this.getJugeCbx())? this.rangJugeInput.val() : ((this.getJugeArbCbx())? -1 : 0); },
                getJugeId: function() { return this.jugeId; }
            };
            
            // Triggers
            // Juge
            $($_var.jugeCbx).change(function() {
                if(nJugeCheck >= 5 && this.checked) {
                    this.checked = false;
                } else {
                    if(this.checked) {
                        // check
                        nJugeCheck++;
                        $_var.jugeArbCbx.prop('disabled', true);
                        $_var.rangJugeInput.prop('disabled', false);
                    } else {
                        // decheck
                        nJugeCheck--;
                        $_var.jugeArbCbx.prop('disabled', false);
                        $_var.rangJugeInput.prop('disabled', true);
                    }
                }
                $('#nJuge').text(nJugeCheck + ' juges sélectionnés');
            });
            // Juge-arbitre
            $($_var.jugeArbCbx).change(function() {
                if(nJugeArbCheck >= 1 && this.checked) {
                    this.checked = false;
                } else {
                    if(this.checked) {
                        nJugeArbCheck++;
                        $_var.jugeCbx.prop('disabled', true);
                    } else {
                        nJugeArbCheck--;
                        $_var.jugeCbx.prop('disabled', false);
                    }
                    $('#nJugeArbitre').text(nJugeArbCheck + ' juges-arbitres sélectionnés');
                }
            });

            //Render
            // Juge
            if ($_var.jugeCbx.prop('checked')) {
                nJugeCheck++;
                $_var.jugeArbCbx.prop('disabled', true);
            }

            // Juge-arbitre
            if ($_var.jugeArbCbx.prop('checked')) {
                nJugeArbCheck++;
                $_var.jugeCbx.prop('disabled', true);
                $_var.rangJugeInput.prop('disabled', true);
            }
            
            return $_var;
        }

        // INIT //
        $('#all_juges').children('tbody').children().each(function(index, element) {
            $allJugesObj.push(_tableRow_get(element));
        });

        $('#form').submit(function(event) {
            //event.preventDefault();
            //event.preventDefault();
            // Compilation des résultats
            res = [];

            $($allJugesObj).each(function(index, element) {
                if(element.getJugeCbx()) {
                    res.push({
                        typejuge: 'Juge',
                        rangJuge: element.getJugeRang(),
                        idUtilisateur: element.getJugeId()
                    });
                }
                if(element.getJugeArbCbx()) {
                    res.push({
                        typejuge: 'Juge-arbitre',
                        rangJuge: element.getJugeRang(),
                        idUtilisateur: element.getJugeId()
                    });
                }
            });

            $('#all_arbitres').val(JSON.stringify(res));

            return true;
        });

        
        $('#nJuge').text(nJugeCheck + ' juges sélectionnés');
        $('#nJugeArbitre').text(nJugeArbCheck + ' juges-arbitres sélectionnés');
        //find("[data-slide='${current}']")

        
    } );
    </script>

{% endblock %}